import React from 'react';
import PT from 'prop-types';
import cn from 'classnames';

import 'nav-frontend-avatar-style';

const cls = (props) => cn('nav-frontend-avatar', {
    'nav-frontend-avatar--warning': props.mode === 'warning',
    'nav-frontend-avatar--error': props.mode === 'error',
    'nav-frontend-avatar--success': props.mode === 'success'
});

const frameCls = (props) => cn('nav-frontend-avatar__frame', {
    'nav-frontend-avatar__frame--center': props.center,
    'nav-frontend-avatar__frame--transparent': props.transparent,
    'nav-frontend-avatar__frame--nomask': props.nomask,
    'nav-frontend-avatar__frame--medium': props.type === 'medium',
    'nav-frontend-avatar__frame--small': props.type === 'small'
});

class Avatar extends React.Component {

    renderChatBubble(says, width) {
        if (says) {
            const chatBubbleStyles = (width) ? { 'width':width } : {} ;
            return (
                <div className="nav-frontend-avatar__chatBubble" style={chatBubbleStyles}>
                    {says}
                    <i className="nav-frontend-avatar__chatBubbleArrow"></i>
                </div>
            );
        }
    }

    render() {
        const { children, says, color, transparent, small, chatBubbleWidth } = this.props;
        const frameStyles = (!transparent) ? { 'background': color } : {};
        return (
            <div className={cls(this.props)}>
                <div className={frameCls(this.props)} style={frameStyles}>{children}</div>
                {this.renderChatBubble(says, chatBubbleWidth)}
            </div>
        );
    }
}

Avatar.propTypes = {
    /**
     * Custom SVG-element som illustrerer en figur, f.eks. en av disse: 
     * https://app.zeplin.io/project/59831e455850985791bdeb4d/screen/5a7c1fcc36781f9423ab6a0e?ref=slack
     */
    children: PT.node,
    /**
     * Tekst eller HTML som rendres i en snakkeboble
     */
    says: PT.node,
    /**
     * Hex-fargecode som definerer bakgrunnsfarge, @navLysGra er default
     */
    color: PT.string,
    /**
     * Skrur av bakgrunnsfargen
     */
    transparent: PT.bool,
    /**
     * Skrur av sirkulær maskering/cropping av children
     */
    nomask: PT.bool,
    /**
     * Rendrer en mindre versjon
     */
    type: PT.oneOf(['large', 'medium', 'small']),
    /**
     * Definerer bredden på snakkeboblen i pixler. 
     * Merk at det fortsatt gjelder både en minimumsbredde (130px default, eller 100px for 'small'), 
     * og en maksimum bredde (330px default, eller 250px for 'small') ref. 'nav-frontend-avatar-style'
     */
    chatBubbleWidth: PT.number,
    /**
     * Definerer bredden på snakkeboblen i pixler.
     */
    mode: PT.oneOf(['success', 'warning', 'error'])
};

Avatar.defaultProps = {
    children: undefined,
    says: undefined,
    color: undefined,
    transparent: false,
    nomask: false,
    type: 'large',
    chatBubbleWidth: undefined,
    mode: undefined
};

export default Avatar;
