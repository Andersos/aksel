import React, { Component } from 'react';
import PT from 'prop-types';
import classnames from 'classnames';
import Collapse from 'react-collapse';
import Typografi from 'nav-frontend-typografi';
import 'nav-frontend-ekspanderbartpanel-style'; // eslint-disable-line import/extensions

const cls = (className, props) => classnames('ekspanderbartPanel', className, {
    'ekspanderbartPanel--lukket': !props.apen,
    'ekspanderbartPanel--apen': props.apen
});

class EkspanderbartpanelPure extends Component {
    constructor(props) {
        super(props);

        this.isCloseAnimation = false;

        this.tabHandler = this.tabHandler.bind(this);
        this.onRest = this.onRest.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if (this.props.apen && !nextProps.apen) {
            this.isCloseAnimation = true;
        }
    }

    onRest() {
        this.isCloseAnimation = false;
    }

    tabHandler(event) {
        const { keyCode } = event;
        const isTab = keyCode === 9;

        if (isTab && this.isCloseAnimation) {
            event.preventDefault();
        }
    }

    render() {
        const { className, children, apen, tittel, tittelProps, onClick, ...renderProps } = this.props;
        const headingConfig = { type: tittelProps, tag: 'span' };

        const heading = <Typografi {...headingConfig} className="ekspanderbartPanel__heading">{tittel}</Typografi>;

        return (
            <div className={cls(className, this.props)} {...renderProps}>
                <button
                    className="ekspanderbartPanel__hode"
                    onKeyDown={this.tabHandler}
                    onClick={onClick}
                    aria-expanded={apen}
                >
                    <div className="ekspanderbartPanel__flex-wrapper">
                        {heading}
                        <span className="ekspanderbartPanel__indikator" />
                    </div>
                </button>
                <Collapse isOpened={apen} onRest={this.onRest}>
                    <article aria-label={tittel} className="ekspanderbartPanel__innhold">{children}</article>
                </Collapse>
            </div>
        );
    }
}

EkspanderbartpanelPure.propTypes = {
    className: PT.string,
    onClick: PT.func.isRequired,
    tittel: PT.string.isRequired,
    tittelProps: PT.string,
    apen: PT.bool.isRequired,
    children: PT.oneOfType([
        PT.arrayOf(PT.node),
        PT.node
    ]).isRequired
};
EkspanderbartpanelPure.defaultProps = {
    tittelProps: 'undertittel',
    className: undefined
};

export default EkspanderbartpanelPure;
