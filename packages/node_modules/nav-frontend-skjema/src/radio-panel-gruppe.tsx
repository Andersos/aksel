import * as React from 'react';
import * as classNames from 'classnames';
import { SkjemaGruppe, Fieldset } from './';
import 'nav-frontend-skjema-style';

export interface RadioProps {
    label: string;
    value: string;
    disabled?: boolean;
}

export interface RadioPanelGruppeProps {
    radios: RadioProps[];
    name: string;
    legend: string;
    onChange: (v: string) => void;
    feil?: object;
    selectedValue?: string;
}

export interface RadioPanelGruppeState extends RadioProps {
    selectedValue?: string;
}

export interface RadioPanelProps extends RadioProps {
    checked: boolean;
    inputId?: string;
    name: string;
    onChange: () => void;
}

interface RadioPanelState {
    hasFocus: boolean;
}

class RadioPanel extends React.Component<RadioPanelProps, RadioPanelState> {
    componentWillMount() {
        this.setState({ hasFocus: false });
    }

    toggleOutline() {
        this.setState({ hasFocus: !this.state.hasFocus });
    }

    render() {
        const { checked, disabled, label, name, inputId, onChange } = this.props;
        const { hasFocus } = this.state;

        const cls = classNames('radioPanel', {
            'radioPanel--checked': checked === true && !disabled,
            'radioPanel--focused': hasFocus === true && !disabled,
            'radioPanel--disabled': disabled === true
        });

        return (
            <div
                className={cls}
                onClick={() => {
                    if (!disabled) {
                        onChange();
                    }
                }}
            >
                <input
                    className="radioknapp"
                    type="radio"
                    name={name}
                    checked={checked}
                    disabled={disabled}
                    onFocus={() => this.toggleOutline()}
                    onBlur={() => this.toggleOutline()}
                />
                <label className="skjemaelement__label" htmlFor={inputId}>{label}</label>
            </div>
        );
    }
}

class RadioPanelGruppe extends React.Component<RadioPanelGruppeProps, RadioPanelGruppeState> {
    componentWillMount() {
        const { selectedValue } = this.props;
        this.setState({ selectedValue });
        this.radioValueChanged = this.radioValueChanged.bind(this);
    }

    componentWillReceiveProps(props: RadioPanelGruppeProps) {
        this.setState({
            selectedValue: props.selectedValue
        });
    }

    radioValueChanged(value) {
        const { onChange } = this.props;
        this.setState({
            selectedValue: value
        });
        onChange(value);
    }

    render () {
        const { radios, name, legend, feil } = this.props;
        const { selectedValue } = this.state;
        return (
            <SkjemaGruppe className="radioPanelGruppe" feil={feil}>
                <Fieldset legend={legend}>
                    {
                        radios.map((radio: RadioProps) => (
                            <RadioPanel
                                name={name}
                                key={`${name}-${radio.value}`}
                                checked={selectedValue === radio.value}
                                onChange={() => this.radioValueChanged(radio.value)}
                                {...radio}
                            />
                        ))
                    }
                </Fieldset>
            </SkjemaGruppe>
        );
    }
}

export default RadioPanelGruppe;
