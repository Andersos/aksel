/* eslint-disable react/prefer-stateless-function  */
import React, { Component, PropTypes as PT } from 'react';
import { guid } from 'nav-frontend-js-utils';
import 'nav-frontend-skjema-style'; // eslint-disable-line import/extensions
import classNames from 'classnames';

/**
 * Standard inputfelt med mulighet for Ã¥ sette bredde
 */
class Input extends Component {
    render() {
        const { label, bredde, feil, id, name, ...other } = this.props;

        const inputId = id || name || guid();
        const inputClass = (width) => classNames('skjemaelement__input', `input--${width}`);
        // eslint-disable-next-line quote-props
        const skjemaElementClass = (harFeil) => classNames('skjemaelement', { 'skjemaelement--harFeil': harFeil });
        return (
            <div className={skjemaElementClass(!!feil)}>
                <label className="skjemaelement__label" htmlFor={inputId}>{label}</label>
                <input type="text" className={inputClass(bredde)} id={inputId} {...other} />
                <div role="alert" aria-live="assertive" className="skjemaelement__feilmelding">
                    {feil ? feil.feilmelding : null}
                </div>
            </div>
        );
    }
}

Input.propTypes = {
    /**
     * Label for tekstfeltet
     */
    label: PT.node.isRequired,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: PT.shape({
        feilmelding: PT.string.isRequired
    }),
    /**
     * Bredden til inputfeltet
     */
    bredde: PT.oneOf(['fullbredde', 'xxl', 'xl', 'l', 'm', 's', 'xs', 'xxs']),
    /**
     * Id for inputfelt, hvis id ikke er satt brukes name eller en tilfeldig guid
     */
    id: PT.string,
    /**
     * Name for inputfelt, hvis name ikke er satt brukes id eller en tilfeldig guid
     */
    name: PT.string
};

Input.defaultProps = {
    bredde: 'fullbredde',
    feil: undefined,
    id: undefined,
    name: undefined
};

export default Input;

