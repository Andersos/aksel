import * as React from 'react';
import * as classNames from 'classnames';
import { SkjemaGruppe, Fieldset } from './';

import 'nav-frontend-skjema-style';

export interface CheckboksProps {
    checked: boolean;
    label: string;
    id?: string;
    disabled?: boolean;
    feil?: FeilProps;
    inputProps?: React.InputHTMLAttributes<HTMLInputElement>;
}

export interface FeilProps {
    feilmelding: React.ReactNode | React.ReactChild | React.ReactChildren;
}

export interface CheckboksPanelGruppeProps {
    checkboxes: CheckboksProps[];
    legend: string;
    onChange: (event: React.SyntheticEvent<EventTarget>) => void;
    checked?: string;
    feil?: FeilProps;
}

export interface CheckboksPanelProps extends CheckboksProps {
    checked: boolean;
    onChange: (event: React.SyntheticEvent<EventTarget>) => void;
    inputProps?: React.InputHTMLAttributes<HTMLInputElement>;
}

export interface CheckboksPanelState {
    hasFocus: boolean;
}

export class CheckboksPanel extends React.Component<CheckboksPanelProps, CheckboksPanelState> {
    constructor(props: CheckboksPanelProps) {
        super(props);
        this.state = { hasFocus: false };
    }

    toggleOutline() {
        this.setState({ hasFocus: !this.state.hasFocus });
    }

    render() {
        const { checked, label, onChange, inputProps, disabled } = this.props;
        const { hasFocus } = this.state;

        const cls = classNames('inputPanel', {
            'inputPanel--checked': checked === true && !disabled,
            'inputPanel--focused': hasFocus === true && !disabled,
            'inputPanel--disabled': disabled === true
        });

        return (
            <label className={cls}>
                <input
                    {...inputProps}
                    className="inputPanel__radio"
                    type="checkbox"
                    checked={checked}
                    disabled={disabled}
                    onFocus={() => this.toggleOutline()}
                    onBlur={() => this.toggleOutline()}
                    onChange={(event: React.SyntheticEvent<EventTarget>) => onChange(event)}
                />
                <span className="inputPanel__label">{label}</span>
            </label>
        );
    }
}

class CheckboksPanelGruppe extends React.Component<CheckboksPanelGruppeProps> {
    render() {
        const { checkboxes, legend, feil, onChange } = this.props;
        return (
            <SkjemaGruppe className="inputPanelGruppe" feil={feil}>
                <Fieldset legend={legend}>
                    {checkboxes.map((checkbox: CheckboksProps) => (
                        <CheckboksPanel
                            key={`${checkbox.id}${checkbox.label}`}
                            onChange={(event: React.SyntheticEvent<EventTarget>) => onChange(event)}
                            checked={checkbox.checked}
                            {...checkbox}
                        />
                    ))}
                </Fieldset>
            </SkjemaGruppe>
        );
    }
}

export default CheckboksPanelGruppe;