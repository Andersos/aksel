import * as React from 'react';
import * as cn from 'classnames';
import { omit } from 'nav-frontend-js-utils';

const tabCls = (props) => cn('nav-frontend-tabs__tab-inner', {
    'nav-frontend-tabs__tab-inner--aktiv': props.aktiv,
    'nav-frontend-tabs__tab-inner--interaktiv': !props.aktiv,
    'nav-frontend-tabs__tab-inner--disabled': props.disabled
});

export interface TabProps {
    label?: React.ReactNode | React.ReactChild | React.ReactChildren;
    aktiv: boolean;
    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    disabled?: boolean;
}

class Tab extends React.Component<TabProps> {
    getLabel() {
        return (
            <div className="nav-frontend-tabs__tab-label">
                {this.props.label || this.props.children}
            </div>
        );
    }

    getInnerTab() {
        if (!this.props.aktiv) {
            return (
                <button
                    className={tabCls(this.props)}
                    onClick={this.props.onClick}
                    role="tab"
                    aria-selected={false}
                    disabled={this.props.disabled}
                >
                    {this.getLabel()}
                </button>
            );
        } else {
            return (
                <div 
                    className={tabCls(this.props)}
                    role="tab"
                    aria-selected={true}
                >
                    {this.getLabel()}
                </div>
            );
        }
    }
    render(){
        const domProps = omit(this.props,
            'label',
            'aktiv',
            'onClick',
            'disabled'
        );

        return (
            <li className="nav-frontend-tabs__tab-outer" role="presentation" {...domProps}>
                {this.getInnerTab()}
            </li>
        );
    }
}

export default Tab;
