import * as React from 'react';
import * as cn from 'classnames';
import { omit } from 'nav-frontend-js-utils';

const tabCls = (props) => cn('nav-frontend-tabs__tab-inner', props.className, {
    'nav-frontend-tabs__tab-inner--aktiv': props.aktiv,
    'nav-frontend-tabs__tab-inner--interaktiv': !props.aktiv,
    'nav-frontend-tabs__tab-inner--disabled': props.disabled
});

export interface TabProps {
    label?: React.ReactNode | React.ReactChild | React.ReactChildren;
    aktiv?: boolean;
    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    linkCreator?: Function;
    disabled?: boolean;
}

class Tab extends React.Component<TabProps> {
    getLabel() {
        return (
            <div className="nav-frontend-tabs__tab-label">
                {this.props.label || this.props.children}
            </div>
        );
    }

    render(){
        const { linkCreator = (props) => <button {...props} /> } = this.props;
        const domProps = omit(this.props,
            'label',
            'aktiv',
            'onClick',
            'disabled',
            'linkCreator',
            'children'
        );

        return (
            <li className="nav-frontend-tabs__tab-outer" role="presentation">
                {linkCreator({
                    ...domProps,
                    className: tabCls(this.props),
                    role: 'tab',
                   'aria-selected': this.props.aktiv,
                    onClick: this.props.onClick,
                    children: this.getLabel()
                })}
            </li>
        );
    }
}

export default Tab;
