/// <reference types="react" />
import * as React from 'react';
export interface EventThrottlerProps {
    children: React.ReactNode | React.ReactChild | React.ReactChildren;
    callback: () => void;
    delay?: number;
    event: 'resize';
}
export declare class EventThrottler extends React.Component<EventThrottlerProps> {
    private throttled;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): string | number | boolean | {} | React.ReactElement<any> | (string | number | boolean | any[] | React.ReactElement<any>)[] | React.ReactPortal | React.ReactChildren | (undefined & string) | (undefined & number) | (null & string) | (null & number) | (string & undefined) | (string & null) | (string & number) | (string & true) | (string & false) | (string & {}) | (string & React.ReactElement<any>) | (string & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (string & React.ReactPortal) | (string & React.ReactChildren) | (number & undefined) | (number & null) | (number & string) | (number & true) | (number & false) | (number & {}) | (number & React.ReactElement<any>) | (number & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (number & React.ReactPortal) | (number & React.ReactChildren) | (true & string) | (true & number) | (true & {}) | (true & React.ReactElement<any>) | (true & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (true & React.ReactPortal) | (true & React.ReactChildren) | (false & string) | (false & number) | (false & {}) | (false & React.ReactElement<any>) | (false & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (false & React.ReactPortal) | (false & React.ReactChildren) | (React.ReactElement<any> & string) | (React.ReactElement<any> & number) | (React.ReactElement<any> & true) | (React.ReactElement<any> & false) | (React.ReactElement<any> & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (React.ReactElement<any> & React.ReactPortal) | (React.ReactElement<any> & React.ReactChildren) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & string) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & number) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & true) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & false) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & React.ReactElement<any>) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & React.ReactPortal) | ((string | number | boolean | any[] | React.ReactElement<any>)[] & React.ReactChildren) | (React.ReactPortal & string) | (React.ReactPortal & number) | (React.ReactPortal & true) | (React.ReactPortal & false) | (React.ReactPortal & React.ReactElement<any>) | (React.ReactPortal & (string | number | boolean | any[] | React.ReactElement<any>)[]) | (React.ReactPortal & React.ReactChildren) | null | undefined;
}
