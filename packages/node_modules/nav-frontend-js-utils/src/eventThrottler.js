import PT from 'prop-types';
import { Component } from 'react';
import _throttle from 'lodash.throttle';

export class EventThrottler extends Component { // eslint-disable-line import/prefer-default-export
    componentDidMount() {
        window.addEventListener('resize', this.throttleFn()());
    }

    componentWillUnmount() {
        if (this.actualThrottleFn) {
            window.removeEventListener('resize', this.actualThrottleFn);
        }
    }

    throttleFn() {
        let cb = this.props.callback;
        cb = cb.bind(this.props.context); // eslint-disable-line react/prop-types
        this.actualThrottleFn = () => _throttle(cb, this.props.delay, { leading: false });
        return this.actualThrottleFn;
    }

    render() {
        return this.props.component;
    }
}

EventThrottler.propTypes = {
    component: PT.element.isRequired,
    callback: PT.func.isRequired,
    delay: PT.number
};

EventThrottler.defaultProps = {
    callback: () => {},
    context: {},
    delay: 0
};
