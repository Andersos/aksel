import React, { Component, PropTypes as PT } from 'react';
import { default as ModalImpl } from 'react-modal';
import 'nav-frontend-modal-style';

/**
 * Modalen bruker `react-modal`, se [github siden](https://github.com/reactjs/react-modal) for mer informasjon.
 *
 */
class Modal extends Component {
    render() {
        const { children, closeButton, ...props} = this.props;
        return (
            <ModalImpl {...props} className="modal" overlayClassName="modal__overlay">
                {children}
                { closeButton && <button className="modal__lukkknapp" onClick={props.onRequestClose}>
                    <span className="text-hide">Lukk modal</span>
                </button> }
            </ModalImpl>
        );
    }
}

Modal.propTypes = {
    /**
     * Bestemmer om modalen selv skal legge til en lukkeknapp
     */
    closeButton: PT.bool,
    /**
     * Bestemmer om modalen skal være synlig
     */
    isOpen: PT.bool.isRequired,
    /**
     * En beskrivelse av formålet med modalen, blir satt som `aria-label`
     */
    contentLabel: PT.string.isRequired,
    /**
     * Innholdet i modalen
     */
    children: PT.node.isRequired,
    /**
     * Funksjon som blir kalt når modalen har blitt åpnet. Kan brukes om man trenger å sette fokus på ett spesielt element.
     */
    onAfterOpen: PT.func,
    /**
     * Funksjon som blir kalt i det modalen ønsker å lukkes
     */
    onRequestClose: PT.func.isRequired,
    /**
     * Tall som beskriver hvor lenge modalen venter før den lukkes
     */
    closeTimeoutMS: PT.number,
    /**
     * HTML som vil få `aria-hidden="true"` mens modalen er åpen
     */
    appElement: PT.instanceOf(window.HTMLElement)
};

Modal.defaultProps = {
    closeButton: true,
    closeTimeoutMS: 0,
    onAfterOpen: () => {},
    appElement: document.body
};

export default Modal;
