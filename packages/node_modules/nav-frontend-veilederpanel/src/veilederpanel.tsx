import * as React from 'react';
import * as PT from 'prop-types';
import * as cn from 'classnames';

import Veileder from 'nav-frontend-veileder';

import 'nav-frontend-veilederpanel-style';

const veilederPanelCls = (props) => cn('nav-veilederpanel', {
    'nav-veilederpanel--kompakt': props.kompakt,
    'nav-veilederpanel--plakat': props.type === 'plakat',
    'nav-veilederpanel--suksess': props.fargetema === 'suksess',
    'nav-veilederpanel--advarsel': props.fargetema === 'advarsel',
    'nav-veilederpanel--feilmelding': props.fargetema === 'feilmelding'
});

export interface VeilederpanelProps {
    /**
     * Egendefinert SVG som rendres i en Veileder-boble
     */
    svg: React.ReactNode | React.ReactChild | React.ReactChildren;
    /**
     * Predefinerte fargetemaer som bestemmer bakgrunnsfargen på veilederen og 
     * border på veilederpanelet.
     */
    fargetema?: 'normal' | 'suksess' | 'advarsel' | 'feilmelding';
    /**
     * Verdiene 'normal' og 'plakat' bestemmer henholdsvis om veilederen plasseres 
     * til venstre eller over innholdet.
     */
    type?: 'normal' | 'plakat';
    /**
     * Kompakt versjon av veilederpanelet bruker litt mindre plass enn normalt, hvor 
     * veilderen rendres overlappende med border på panelet.
     */
    kompakt?: boolean;
}

class Veilederpanel extends React.Component<VeilederpanelProps> {
    render() {
        const { svg, children } = this.props;
        const storrelse = this.props.type === 'plakat' ? 'M' : 'S' ;
        return (
            <div className={veilederPanelCls(this.props)}>
                <Veileder fargetema={this.props.fargetema} storrelse={storrelse}>
                    {svg}
                </Veileder>
                <div>{children}</div>
            </div>
        );
    }
}

(Veilederpanel as any).propTypes = {
    /**
     * Egendefinert SVG som rendres i en Veileder-boble
     */
    svg: PT.node.isRequired,
    /**
     * Predefinerte fargetemaer som bestemmer bakgrunnsfargen på veilederen og 
     * border på veilederpanelet.
     */
    fargetema: PT.oneOf(['normal', 'suksess', 'advarsel', 'feilmelding']),
    /**
     * Verdiene 'normal' og 'plakat' bestemmer henholdsvis om veilederen plasseres 
     * til venstre eller over innholdet.
     */
    type: PT.oneOf(['normal', 'plakat']),
    /**
     * Kompakt versjon av veilederpanelet bruker litt mindre plass enn normalt, hvor 
     * veilderen rendres overlappende med border på panelet.
     */
    kompakt: PT.bool
};

export default Veilederpanel;
