/* eslint-disable */
// Generated by gulp svg-icon - do not modify manually


import React, {Component} from 'react';

const iconList = [
  'advarsel-sirkel',
  'advarsel-trekant',
  'advarsel-trekant-fylt',
  'alarm',
  'alarm-ny',
  'info-sirkel',
  'info-sirkel-fylt',
  'info-sirkel-orange',
  'ok-sirkel',
  'ok-sirkel-fylt',
  'spinner',
  'spinner-negativ',
  'spinner-stroke',
  'spinner-stroke-negativ',
  'sporsmal-sirkel',
  'stegindikator__hake',
]


export default class Icon extends Component {

  static propTypes = {
    height: React.PropTypes.number,
    kind: React.PropTypes.oneOf([
      'advarsel-sirkel',
      'advarsel-trekant',
      'advarsel-trekant-fylt',
      'alarm',
      'alarm-ny',
      'info-sirkel',
      'info-sirkel-fylt',
      'info-sirkel-orange',
      'ok-sirkel',
      'ok-sirkel-fylt',
      'spinner',
      'spinner-negativ',
      'spinner-stroke',
      'spinner-stroke-negativ',
      'sporsmal-sirkel',
      'stegindikator__hake',
    ]).isRequired,
    onClick: React.PropTypes.func,
    preview: React.PropTypes.bool,
    size: React.PropTypes.number,
    style: React.PropTypes.oneOfType([
      React.PropTypes.array,
      React.PropTypes.object
    ]),
    width: React.PropTypes.number,
    wrapperStyle: React.PropTypes.oneOfType([
      React.PropTypes.array,
      React.PropTypes.object
    ])
  };

  static defaultProps = {
    size: 32
  }

  render() {
    const {kind, preview} = this.props

    return preview ?
      this.renderPreview() :
      this.renderIcon(kind)
  }

  renderPreview() {
    return (
      <div>
        {iconList.map(kind => this.renderPreviewKind(kind))}
      </div>
    )
  }

  renderIcon(kind) {
    const {wrapperStyle} = this.props;

    if (wrapperStyle)
      return <div style={wrapperStyle}>{this.getIcon(kind)}</div>

    return this.getIcon(kind)
  }

  renderPreviewKind(kind) {
    return (
      <div key={kind}>
        <h3>&lt;Icon kind="{kind}" /&gt;</h3>
        {this.renderIcon(kind)}
      </div>
    )
  }

  getIcon(kind) {
    const {height, onClick, size, style, width, ...props} = this.props;

    switch (kind) {
      default: return null;
      case ('advarsel-sirkel'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 23 24" ><title>Advarsel</title><g stroke="#3E3832" fill="none" fillRule="evenodd" strokeLinejoin="round"><path d="M22.498 11.31c.105 6.075-4.923 11.086-10.998 11.192C5.426 22.608.607 17.768.502 11.692.396 5.62 5.426.609 11.5.503 17.574.396 22.393 5.237 22.498 11.31zM11.5 13V6" strokeLinecap="round"/><path d="M12 16.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"/></g></svg>);
      case ('advarsel-trekant'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 23 23" ><title>Advarsel</title><g stroke="#3E3832" fill="none" fillRule="evenodd" strokeLinejoin="round"><path d="M11.5 15.805V8.154m11 14.346H.5l11-22z" strokeLinecap="round"/><path d="M12 19a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"/></g></svg>);
      case ('advarsel-trekant-fylt'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 24 24" ><title>14A6B40E-4A38-4BB1-A45F-C91CBAEF30B7</title><path d="M23.892 23.16L12.462.266c-.178-.355-.758-.355-.934 0L.055 23.244A.523.523 0 0 0 .523 24h22.955a.523.523 0 0 0 .414-.84zM11.474 8.492a.522.522 0 1 1 1.043 0v7.993a.523.523 0 0 1-1.043 0V8.492zm.521 12.487a.998.998 0 1 1 0-1.996.998.998 0 0 1 0 1.996z" fill="#FFF" fillRule="evenodd"/></svg>);
      case ('alarm'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 23 24" ><title>Alarm</title><path d="M19.167 15.437v-4.963c0-3.293-2.19-6.096-5.257-7.18C13.7 1.994 12.525 1 11.102 1c-1.423 0-2.601.995-2.811 2.293-3.067 1.085-5.255 3.888-5.255 7.181v4.963c0 1.495-1.275 2.707-2.846 2.707h21.824c-1.574 0-2.847-1.212-2.847-2.707zM13.98 20.14c0 1.496-1.276 2.708-2.848 2.708-1.574 0-2.846-1.212-2.846-2.707" stroke="#3E3832" fill="none" fillRule="evenodd" strokeLinecap="round" strokeLinejoin="round"/></svg>);
      case ('alarm-ny'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 24 26" ><title>Alarm, nye</title><g fill="none" fillRule="evenodd"><path d="M19.167 17.437v-4.963c0-3.293-2.19-6.096-5.257-7.18C13.7 3.994 12.525 3 11.102 3c-1.423 0-2.601.995-2.811 2.293-3.067 1.085-5.255 3.888-5.255 7.181v4.963c0 1.495-1.275 2.707-2.846 2.707h21.824c-1.574 0-2.847-1.212-2.847-2.707zM13.98 22.14c0 1.496-1.276 2.708-2.848 2.708-1.574 0-2.846-1.212-2.846-2.707" strokeLinecap="round" stroke="#3E3832" strokeLinejoin="round"/><path d="M16.345 14.335c-3.64 0-6.591-2.887-6.591-6.449 0-3.561 2.95-6.449 6.591-6.449s6.592 2.888 6.592 6.45c0 3.561-2.951 6.448-6.592 6.448" fill="#C30000" fillRule="nonzero"/><path d="M16.345 14.335c-3.64 0-6.591-2.887-6.591-6.449 0-3.561 2.95-6.449 6.591-6.449s6.592 2.888 6.592 6.45c0 3.561-2.951 6.448-6.592 6.448z" stroke="#FFF" strokeWidth="1.016"/><path d="M17.928 7.98c0 .804-.665 1.455-1.486 1.455s-1.486-.65-1.486-1.454c0-.804.665-1.454 1.486-1.454s1.486.65 1.486 1.454" fill="#FFF" fillRule="nonzero"/></g></svg>);
      case ('info-sirkel'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 23 23" ><title>Informasjon-ikon</title><g stroke="#3E3832" fill="none" fillRule="evenodd" strokeLinejoin="round"><path d="M22.5 11.5c0 6.075-4.926 11-11 11-6.076 0-11-4.925-11-11s4.924-11 11-11c6.074 0 11 4.925 11 11zm-14 7h6" strokeLinecap="round"/><path strokeLinecap="round" d="M9.5 9.5h2V18"/><path d="M11 5a.5.5 0 1 0 0 1 .5.5 0 0 0 0-1z"/></g></svg>);
      case ('info-sirkel-fylt'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 24 24" ><title>7BED67DE-AEBF-4364-B605-EBAAB1A44974</title><path d="M12 0C5.382 0 0 5.382 0 12s5.382 12 12 12c6.617 0 12-5.382 12-12S18.617 0 12 0zm-.522 5.217a1.045 1.045 0 1 1-.002 2.09 1.045 1.045 0 0 1 .002-2.09zm3.652 14.61H8.87a.522.522 0 0 1 0-1.044h2.608v-8.348H9.913a.522.522 0 0 1 0-1.044H12c.287 0 .522.234.522.522v8.87h2.608a.523.523 0 0 1 0 1.043z" fill="#3E3832" fillRule="evenodd"/></svg>);
      case ('info-sirkel-orange'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 24 24" ><title>02B4E6D8-92CF-493A-BD4F-1E4D48BCD9FA</title><g fill="#D87F0A" fillRule="evenodd"><path d="M12 0C5.383 0 0 5.383 0 12s5.383 12 12 12 12-5.383 12-12S18.617 0 12 0zm0 22.957C5.958 22.957 1.043 18.042 1.043 12 1.043 5.958 5.958 1.043 12 1.043c6.042 0 10.957 4.915 10.957 10.957 0 6.042-4.915 10.957-10.957 10.957z"/><path d="M15.13 18.783h-2.608v-8.87A.522.522 0 0 0 12 9.391H9.913a.522.522 0 0 0 0 1.044h1.565v8.348H8.87a.522.522 0 0 0 0 1.043h6.26a.522.522 0 0 0 0-1.043z"/><ellipse cx="11.478" cy="5.739" rx="1.043" ry="1.043"/></g></svg>);
      case ('ok-sirkel'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 24 24" ><title>3E6826BC-1604-422F-B122-ACB8E2B34006</title><g fill="#06893A" fillRule="evenodd"><path d="M10 16a.502.502 0 0 1-.354-.147l-2.5-2.5a.5.5 0 0 1 .707-.707l2.16 2.158 7.145-6.67a.502.502 0 0 1 .707.024.502.502 0 0 1-.024.707l-7.5 7a.5.5 0 0 1-.34.134z"/><path d="M12 24C5.383 24 0 18.617 0 12S5.383 0 12 0s12 5.383 12 12-5.383 12-12 12zm0-23C5.935 1 1 5.935 1 12s4.935 11 11 11 11-4.935 11-11S18.065 1 12 1z"/></g></svg>);
      case ('ok-sirkel-fylt'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 25 24" ><title>937B54AB-E3F0-4413-8155-0D0A06C5A955</title><path d="M12.77 0C6.208 0 .87 5.384.87 12s5.338 12 11.9 12 11.902-5.384 11.902-12S19.332 0 12.77 0zm5.298 8.866l-7.439 7a.495.495 0 0 1-.69-.012l-2.479-2.5a.503.503 0 0 1 0-.707.493.493 0 0 1 .702 0l2.14 2.158 7.088-6.67a.494.494 0 0 1 .702.023.504.504 0 0 1-.024.708z" fill="#3E3832" fillRule="evenodd"/></svg>);
      case ('spinner'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle xmlns="http://www.w3.org/2000/svg" cx="50" cy="50" r="40" stroke="#bdbab7" fill="none" strokeWidth="10"/><circle cx="50" cy="50" r="40" stroke="#7f756c" fill="none" strokeWidth="10" strokeDasharray="50 155" strokeLinecap="round"/></svg>);
      case ('spinner-negativ'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle xmlns="http://www.w3.org/2000/svg" cx="50" cy="50" r="40" stroke="#eee" fill="none" strokeWidth="10"/><circle cx="50" cy="50" r="40" stroke="#888" fill="none" strokeWidth="10" strokeDasharray="50 155" strokeLinecap="round"/></svg>);
      case ('spinner-stroke'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle xmlns="http://www.w3.org/2000/svg" cx="50" cy="50" r="40" stroke="#bdbab7" fill="none" strokeWidth="13"/><circle cx="50" cy="50" r="40" stroke="#7f756c" fill="none" strokeWidth="7" strokeDasharray="50 155" strokeLinecap="round"/></svg>);
      case ('spinner-stroke-negativ'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle xmlns="http://www.w3.org/2000/svg" cx="50" cy="50" r="40" stroke="#eee" fill="none" strokeWidth="13"/><circle cx="50" cy="50" r="40" stroke="#888" fill="none" strokeWidth="7" strokeDasharray="50 155" strokeLinecap="round"/></svg>);
      case ('sporsmal-sirkel'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 23 23" ><title>Spørsmålsikon</title><g stroke="#3E3832" fill="none" fillRule="evenodd" strokeLinejoin="round"><path d="M22.5 11.5c0 6.075-4.925 11-11 11s-11-4.925-11-11 4.925-11 11-11 11 4.925 11 11z" strokeLinecap="round"/><path d="M8.5 9a3 3 0 1 1 3 3v3" strokeLinecap="round"/><path d="M12 17.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"/></g></svg>);
      case ('stegindikator__hake'): return (<svg {...props} height={height || size} width={width || size} onClick={onClick} style={style} viewBox="0 0 32 32" ><title>Avhuket</title><g fill="none" fillRule="evenodd"><path d="M16 0C7.177 0 0 7.179 0 16s7.177 16 16 16c8.821 0 16-7.179 16-16S24.821 0 16 0zm7.121 11.821l-10 9.334a.669.669 0 0 1-.926-.016L8.86 17.805a.667.667 0 0 1 .943-.942l2.877 2.877 9.53-8.893a.668.668 0 1 1 .91.974z" fill="#97D2AE"/><path d="M23.121 11.821l-10 9.334a.669.669 0 0 1-.926-.016L8.86 17.805a.667.667 0 0 1 .943-.942l2.877 2.877 9.53-8.893a.668.668 0 1 1 .91.974z" fill="#3E3832"/></g></svg>);
      }
  }
}


