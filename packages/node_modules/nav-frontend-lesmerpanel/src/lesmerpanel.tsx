import * as React from 'react';
import { PropTypes as PT } from 'prop-types';
import 'nav-frontend-lesmerpanel-style';
import { UnmountClosed } from 'react-collapse';
import LesmerpanelToggle from './lesmerpanelToggle';
import { guid } from 'nav-frontend-js-utils';
import * as classNames from 'classnames';
import { erSynligIViewport, scrollTo } from './lesmerutils';

export interface LesMerPanelBaseProps {
    /**
     * Hvorvidt panelet initielt er åpent
     */
    defaultApen?: boolean;
    /**
     * Funksjon som kalles når panelet åpnes
     */
    onOpen?: (event: React.SyntheticEvent<HTMLButtonElement>) => void;
    /**
     * Funksjon som kalles når panelet lukkes
     */
    onClose?: (event: React.SyntheticEvent<HTMLButtonElement>) => void;
    /**
     * Innhold som plasseres før "Åpne"
     */
    intro: React.ReactNode;
    /**
     * Innhold som vises når man klikker på "Åpne"
     */
    children: React.ReactNode;
    /**
     * ID til panelet
     */
    id?: string;
    /**
     * Tekst som vises for å lukke panelet
     */
    lukkTekst: React.ReactNode;
    /**
     * Tekst som vises for å åpne panelet
     */
    apneTekst: React.ReactNode;
    /**
     * Egendefinert klassenavn
     */
    className?: string;
    /**
     * Hvis komponenten skal brukes på hvit bakgrunn kan denne brukes for å gi den en border
     */
    border?: boolean;
}

export interface LesMerPanelBaseState {
    erApen: boolean;
}

const lesMerPanelCls = (props) => classNames('lesMerPanel', props.className, {
    'lesMerPanel--border': props.border
})

/**
 * Lesmerpanel
 */
class Lesmerpanel extends React.Component<LesMerPanelBaseProps, LesMerPanelBaseState> {
    private id: string = this.props.id || guid();
    private lesMerPanel: HTMLDivElement | null = null;
    private mer: HTMLDivElement | null = null;

    static defaultProps: Partial<LesMerPanelBaseProps> = {
        defaultApen: false,
        apneTekst: 'Åpne',
        lukkTekst: 'Lukk',
        onClose: () => {},
        onOpen: () => {}
    };

    constructor(props) {
        super(props);

        this.state = { erApen: props.defaultApen };
    }

    saveRef = (refName: string) => (ref: HTMLDivElement) => this[refName] = ref;

    handleScrollAndFocus = () => {
        if (this.state.erApen) {
            scrollTo(this.lesMerPanel);
            this.mer!.focus();
        } else {
            if (!erSynligIViewport(this.lesMerPanel)) {
                scrollTo(this.lesMerPanel);
            }
        }
    }

    toggle = (e) => {
        e.preventDefault();
        this.setState({ erApen: !this.state.erApen });
        if (this.state.erApen) {
            this.props.onClose!(e);
        } else {
            this.props.onOpen!(e);
        }
    }

    render() {
        const { intro, children } = this.props;

        return (
            <div id={this.id} className={lesMerPanelCls(this.props)} ref={this.saveRef('lesMerPanel')}>
                <div>
                    {intro}
                </div>
                <div className="lesMerPanel__merContainer">
                    <UnmountClosed isOpened={this.state.erApen} onRest={this.handleScrollAndFocus}>
                        <div className="lesMerPanel__mer" ref={this.saveRef('mer')} tabIndex={-1}>
                            {children}
                        </div>
                    </UnmountClosed>
                </div>
                <LesmerpanelToggle
                    apneTekst={this.props.apneTekst}
                    lukkTekst={this.props.lukkTekst}
                    erApen={this.state.erApen}
                    onClick={this.toggle}
                />
            </div>);
    }
}

(Lesmerpanel as any).propTypes = {
    /**
     * Hvorvidt panelet initielt er åpent
     */
    defaultApen: PT.bool,
    /**
     * Funksjon som kalles når panelet åpnes
     */
    onOpen: PT.func,
    /**
     * Funksjon som kalles når panelet lukkes
     */
    onClose: PT.func,
    /**
     * Innhold som plasseres før "Åpne"
     */
    intro: PT.node.isRequired,
    /**
     * Innhold som vises når man klikker på "Åpne"
     */
    children: PT.node.isRequired,
    /**
     * ID til panelet
     */
    id: PT.string,
    /**
     * Tekst som vises for å lukke panelet
     */
    lukkTekst: PT.string.isRequired,
    /**
     * Tekst som vises for å åpne panelet
     */
    apneTekst: PT.string.isRequired,
    /**
     * Egendefinert klassenavn
     */
    className: PT.string,
    /**
     * Hvis komponenten skal brukes på hvit bakgrunn kan denne brukes for å gi den en border    
     */
    border: PT.bool,
};

export default Lesmerpanel;
