import * as React from 'react';
import * as PT from 'prop-types';
import * as cn from 'classnames';
import { omit, equalArrays } from 'nav-frontend-js-utils';

import ToggleGruppePure from './toggle-gruppe-pure';
import ToggleKnappPure, { ToggleKnappPureProps, ToggleKnappPurePropsShape } from './toggle-knapp-pure';

import 'nav-frontend-toggle-style';

export interface ToggleGruppeProps {
    /**
     * Array av toggle knapper, se `toggle-knapp-pure.tsx`
     */
    toggles: ToggleKnappPureProps[];
    /**
     * Egendefinert klassenavn.
     */
    className?: string;
    /**
     * Hvis `true` vil det være mulig å velge flere knapper om gangen.
     */
    multiSelect?: boolean;
    /**
     * Hvis 'true' reduseres høyre/venstre-padding på knappene betraktelig.
     */
    kompakt?: boolean;
    /**
     * Custom onChange handler
     */
    onChange?: (event: React.SyntheticEvent<EventTarget>, indexes: number[]) => void;
}

export interface ToggleGruppeState {
    pressedIndexes: number[];
}

class ToggleGruppe extends React.Component<ToggleGruppeProps, ToggleGruppeState> {
    constructor(props) {
        super(props);
        this.state = {
            pressedIndexes: this.getDefaultPressedIndexes()
        };
    }

    getDefaultPressedIndexes() {
        return this.props.toggles.filter((toggle) => toggle.pressed).map((toggle) => {
            return this.props.toggles.indexOf(toggle);
        });
    }

    handleClick = (e, index, customOnClick) => {
        const foundIndex = this.state.pressedIndexes.indexOf(index);
        const newIndexes = this.state.pressedIndexes;

        if (typeof customOnClick === 'function') customOnClick(e);
        if (typeof this.props.onChange === 'function') this.props.onChange(e, newIndexes);

        if (!this.props.multiSelect) {
            this.setState({
                pressedIndexes: [index]
            });
            return;
        }

        if (foundIndex !== -1) {
            newIndexes.splice(foundIndex, 1);
        } else {
            newIndexes.push(index);
        }

        this.setState({
            pressedIndexes: newIndexes
        });
    }

    render() {
        const { className, ...other } = this.props;
        const renderProps = omit(other, 'children', 'multiSelect', 'toggles');
        const toggles = this.props.toggles.map((toggle, i) => ({
            ...toggle,
            kompakt: this.props.kompakt,
            pressed: this.state.pressedIndexes.indexOf(i) !== -1,
            onClick: (e) => this.handleClick(e, i, toggle.onClick)
        }));

        return (
            <ToggleGruppePure
                {...renderProps}
                toggles={toggles}
            />
        );
    }
}

(ToggleGruppe as React.ComponentClass).propTypes = {
    /**
     * Array av toggle knapper, se `toggle-knapp-pure.tsx`
     */
    toggles: PT.arrayOf(ToggleKnappPurePropsShape).isRequired,
    /**
     * Egendefinert klassenavn.
     */
    className: PT.string,
    /**
     * Hvis `true` vil det være mulig å velge flere knapper om gangen.
     */
    multiSelect: PT.bool,
    /**
     * Hvis 'true' reduseres høyre/venstre-padding på knappene betraktelig.
     */
    kompakt: PT.bool,
    /**
     * Custom onChange handler
     */
    onChange: PT.func
};

export default ToggleGruppe;
