import * as React from 'react';
import * as PT from 'prop-types';
import { HTMLAttributes } from 'react';
import * as cn from 'classnames';

import { omit, guid } from 'nav-frontend-js-utils';
import 'nav-frontend-toggle-style';

const knappCls = (props) => cn('knapp', 'toggleKnapp', {
    'toggleKnapp--pressed': props.pressed,
    'toggleKnapp--kompakt': props.kompakt
});

export interface ToggleKnappPureProps extends HTMLAttributes<HTMLButtonElement> {
    /**
     * Pressed state
     */
    pressed?: boolean;
    /**
     * Kompakt versjon
     */
    kompakt?: boolean;
}

class ToggleKnappPure extends React.PureComponent<ToggleKnappPureProps> {
    static defaultProps: ToggleKnappPureProps = {
        pressed: false
    };
    render() {
        const renderProps = omit(this.props, 'children', 'pressed', 'kompakt');
        const knappId = guid();
        return (
            <button
                type="button"
                id={knappId}
                className={knappCls(this.props)}
                aria-pressed={this.props.pressed}
                {...renderProps}
            >
                {this.props.children}
            </button>
        );
    }
}

export const ToggleKnappPurePropsShape = PT.shape({
    /**
     * Pressed state
     */
    pressed: PT.bool,
    /**
     * Kompakt versjon
     */
    kompakt: PT.bool
});

(ToggleKnappPure as React.ComponentClass).propTypes = ToggleKnappPurePropsShape;

export default ToggleKnappPure;
