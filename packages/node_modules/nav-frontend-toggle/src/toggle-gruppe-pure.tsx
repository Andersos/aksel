import * as React from 'react';
import * as cn from 'classnames';
import { guid, omit } from 'nav-frontend-js-utils';
import ToggleKnappPure, { ToggleKnappPureProps } from './toggle-knapp-pure';

export interface ToggleGruppePureProps {
    /**
     * Array av toggle knapper, se `toggle-knapp-pure.tsx`
     */
    toggles?: ToggleKnappPureProps[];
    /**
     * Egendefinert klassenavn.
     */
    className?: string;
    /**
     * Hvis 'true' reduseres høyre/venstre-padding på knappene betraktelig.
     */
    kompakt?: boolean;
    /**
     * Custom onChange handler
     */
    onChange?: (event: React.SyntheticEvent<EventTarget>, index: number) => void;
}

class ToggleGruppePure extends React.PureComponent<ToggleGruppePureProps> {

    static Toggle = ToggleKnappPure;

    handleClick = (e, index, customOnClick) => {
        if (typeof customOnClick === 'function') customOnClick(e);
        if (typeof this.props.onChange === 'function') this.props.onChange(e, index);
    }

    renderToggles() {
        if (this.props.children) {
            return React.Children.map(
                this.props.children,
                (child: React.ReactElement<ToggleKnappPureProps>, i: number) => {
                    if (React.isValidElement(child)) {
                        return React.cloneElement(child, {
                            kompakt: this.props.kompakt,
                            onClick: (e) => this.handleClick(e, i, child.props.onClick)
                        });
                    }
                    return child;
                }
            );
        }

        if (this.props.toggles) {
            return this.props.toggles.map((toggle, i) => {
                return (
                    <ToggleKnappPure
                        key={guid()}
                        kompakt={this.props.kompakt}
                        {...toggle}
                        onClick={(e) => this.handleClick(e, i, toggle.onClick)}
                    />
                );
            });
        }
    }

    render() {
        const { className, ...other } = this.props;
        const renderProps = omit(other, 'children', 'kompakt', 'toggles');

        return (
            <div
                className={cn('toggleGruppe', className)}
                {...renderProps}
            >
                {this.renderToggles()}
            </div>
        );
    }
}

export default ToggleGruppePure;
